"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var KeyDto_1 = require("./KeyDto");
var AccountLinkTransactionBodyBuilder = (function () {
    function AccountLinkTransactionBodyBuilder(remotePublicKey, linkAction) {
        this.remotePublicKey = remotePublicKey;
        this.linkAction = linkAction;
    }
    AccountLinkTransactionBodyBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var remotePublicKey = KeyDto_1.KeyDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, remotePublicKey.getSize());
        var linkAction = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        return new AccountLinkTransactionBodyBuilder(remotePublicKey, linkAction);
    };
    AccountLinkTransactionBodyBuilder.prototype.getRemotePublicKey = function () {
        return this.remotePublicKey;
    };
    AccountLinkTransactionBodyBuilder.prototype.getLinkAction = function () {
        return this.linkAction;
    };
    AccountLinkTransactionBodyBuilder.prototype.getSize = function () {
        var size = 0;
        size += this.remotePublicKey.getSize();
        size += 1;
        return size;
    };
    AccountLinkTransactionBodyBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var remotePublicKeyBytes = this.remotePublicKey.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, remotePublicKeyBytes);
        var linkActionBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.linkAction, 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, linkActionBytes);
        return newArray;
    };
    return AccountLinkTransactionBodyBuilder;
}());
exports.AccountLinkTransactionBodyBuilder = AccountLinkTransactionBodyBuilder;
//# sourceMappingURL=AccountLinkTransactionBodyBuilder.js.map