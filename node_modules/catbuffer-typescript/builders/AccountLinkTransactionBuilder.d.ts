import { AccountLinkActionDto } from './AccountLinkActionDto';
import { AccountLinkTransactionBodyBuilder } from './AccountLinkTransactionBodyBuilder';
import { AmountDto } from './AmountDto';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { SignatureDto } from './SignatureDto';
import { TimestampDto } from './TimestampDto';
import { TransactionBuilder } from './TransactionBuilder';
export declare class AccountLinkTransactionBuilder extends TransactionBuilder {
    accountLinkTransactionBody: AccountLinkTransactionBodyBuilder;
    constructor(signature: SignatureDto, signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, fee: AmountDto, deadline: TimestampDto, remotePublicKey: KeyDto, linkAction: AccountLinkActionDto);
    static loadFromBinary(payload: Uint8Array): AccountLinkTransactionBuilder;
    getRemotePublicKey(): KeyDto;
    getLinkAction(): AccountLinkActionDto;
    getSize(): number;
    serialize(): Uint8Array;
}
