"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var UnresolvedMosaicIdDto_1 = require("./UnresolvedMosaicIdDto");
var AccountMosaicRestrictionTransactionBodyBuilder = (function () {
    function AccountMosaicRestrictionTransactionBodyBuilder(restrictionFlags, restrictionAdditions, restrictionDeletions) {
        this.restrictionFlags = restrictionFlags;
        this.accountRestrictionTransactionBody_Reserved1 = 0;
        this.restrictionAdditions = restrictionAdditions;
        this.restrictionDeletions = restrictionDeletions;
    }
    AccountMosaicRestrictionTransactionBodyBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var restrictionFlags = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 2));
        byteArray.splice(0, 2);
        var restrictionAdditionsCount = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        var restrictionDeletionsCount = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        var accountRestrictionTransactionBody_Reserved1 = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 4));
        byteArray.splice(0, 4);
        var restrictionAdditions = [];
        for (var i = 0; i < (Array.isArray(restrictionAdditionsCount) ? GeneratorUtils_1.GeneratorUtils.compact(restrictionAdditionsCount) : restrictionAdditionsCount); i++) {
            var item = UnresolvedMosaicIdDto_1.UnresolvedMosaicIdDto.loadFromBinary(Uint8Array.from(byteArray));
            restrictionAdditions.push(item);
            byteArray.splice(0, item.getSize());
        }
        var restrictionDeletions = [];
        for (var i = 0; i < (Array.isArray(restrictionDeletionsCount) ? GeneratorUtils_1.GeneratorUtils.compact(restrictionDeletionsCount) : restrictionDeletionsCount); i++) {
            var item = UnresolvedMosaicIdDto_1.UnresolvedMosaicIdDto.loadFromBinary(Uint8Array.from(byteArray));
            restrictionDeletions.push(item);
            byteArray.splice(0, item.getSize());
        }
        return new AccountMosaicRestrictionTransactionBodyBuilder(restrictionFlags, restrictionAdditions, restrictionDeletions);
    };
    AccountMosaicRestrictionTransactionBodyBuilder.prototype.getRestrictionFlags = function () {
        return this.restrictionFlags;
    };
    AccountMosaicRestrictionTransactionBodyBuilder.prototype.getAccountRestrictionTransactionBody_Reserved1 = function () {
        return this.accountRestrictionTransactionBody_Reserved1;
    };
    AccountMosaicRestrictionTransactionBodyBuilder.prototype.getRestrictionAdditions = function () {
        return this.restrictionAdditions;
    };
    AccountMosaicRestrictionTransactionBodyBuilder.prototype.getRestrictionDeletions = function () {
        return this.restrictionDeletions;
    };
    AccountMosaicRestrictionTransactionBodyBuilder.prototype.getSize = function () {
        var size = 0;
        size += 2;
        size += 1;
        size += 1;
        size += 4;
        this.restrictionAdditions.forEach(function (o) { return size += o.getSize(); });
        this.restrictionDeletions.forEach(function (o) { return size += o.getSize(); });
        return size;
    };
    AccountMosaicRestrictionTransactionBodyBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var restrictionFlagsBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getRestrictionFlags(), 2);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionFlagsBytes);
        var restrictionAdditionsCountBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.restrictionAdditions.length, 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionAdditionsCountBytes);
        var restrictionDeletionsCountBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.restrictionDeletions.length, 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionDeletionsCountBytes);
        var accountRestrictionTransactionBody_Reserved1Bytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getAccountRestrictionTransactionBody_Reserved1(), 4);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, accountRestrictionTransactionBody_Reserved1Bytes);
        this.restrictionAdditions.forEach(function (item) {
            var restrictionAdditionsBytes = item.serialize();
            newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionAdditionsBytes);
        });
        this.restrictionDeletions.forEach(function (item) {
            var restrictionDeletionsBytes = item.serialize();
            newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionDeletionsBytes);
        });
        return newArray;
    };
    return AccountMosaicRestrictionTransactionBodyBuilder;
}());
exports.AccountMosaicRestrictionTransactionBodyBuilder = AccountMosaicRestrictionTransactionBodyBuilder;
//# sourceMappingURL=AccountMosaicRestrictionTransactionBodyBuilder.js.map