"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var AccountRestrictionTransactionTypeValueBuilder = (function () {
    function AccountRestrictionTransactionTypeValueBuilder(restrictionValues) {
        this.restrictionValues = restrictionValues;
    }
    AccountRestrictionTransactionTypeValueBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var restrictionValuesCount = GeneratorUtils_1.GeneratorUtils.bufferToUint64(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 8));
        byteArray.splice(0, 8);
        var restrictionValues = [];
        for (var i = 0; i < (Array.isArray(restrictionValuesCount) ? GeneratorUtils_1.GeneratorUtils.compact(restrictionValuesCount) : restrictionValuesCount); i++) {
            var item = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 2));
            restrictionValues.push(item);
            byteArray.splice(0, 2);
        }
        return new AccountRestrictionTransactionTypeValueBuilder(restrictionValues);
    };
    AccountRestrictionTransactionTypeValueBuilder.prototype.getRestrictionValues = function () {
        return this.restrictionValues;
    };
    AccountRestrictionTransactionTypeValueBuilder.prototype.getSize = function () {
        var size = 0;
        size += 8;
        this.restrictionValues.forEach(function () { return size += 2; });
        return size;
    };
    AccountRestrictionTransactionTypeValueBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var restrictionValuesCountBytes = GeneratorUtils_1.GeneratorUtils.uint64ToBuffer(GeneratorUtils_1.GeneratorUtils.fromUint(this.restrictionValues.length));
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionValuesCountBytes);
        this.restrictionValues.forEach(function (item) {
            var restrictionValuesBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(item, 2);
            newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionValuesBytes);
        });
        return newArray;
    };
    return AccountRestrictionTransactionTypeValueBuilder;
}());
exports.AccountRestrictionTransactionTypeValueBuilder = AccountRestrictionTransactionTypeValueBuilder;
//# sourceMappingURL=AccountRestrictionTransactionTypeValueBuilder.js.map