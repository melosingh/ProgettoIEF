"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AddressResolutionEntryBuilder_1 = require("./AddressResolutionEntryBuilder");
var GeneratorUtils_1 = require("./GeneratorUtils");
var ReceiptBuilder_1 = require("./ReceiptBuilder");
var UnresolvedAddressDto_1 = require("./UnresolvedAddressDto");
var AddressResolutionStatementBuilder = (function (_super) {
    __extends(AddressResolutionStatementBuilder, _super);
    function AddressResolutionStatementBuilder(version, type, unresolved, resolutionEntries) {
        var _this = _super.call(this, version, type) || this;
        _this.unresolved = unresolved;
        _this.resolutionEntries = resolutionEntries;
        return _this;
    }
    AddressResolutionStatementBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = ReceiptBuilder_1.ReceiptBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var unresolved = UnresolvedAddressDto_1.UnresolvedAddressDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, unresolved.getSize());
        var resolutionEntriesByteSize = byteArray.length;
        var resolutionEntries = [];
        while (resolutionEntriesByteSize > 0) {
            var item = AddressResolutionEntryBuilder_1.AddressResolutionEntryBuilder.loadFromBinary(Uint8Array.from(byteArray));
            resolutionEntries.push(item);
            var itemSize = item.getSize();
            resolutionEntriesByteSize -= itemSize;
            byteArray.splice(0, itemSize);
        }
        return new AddressResolutionStatementBuilder(superObject.version, superObject.type, unresolved, resolutionEntries);
    };
    AddressResolutionStatementBuilder.prototype.getUnresolved = function () {
        return this.unresolved;
    };
    AddressResolutionStatementBuilder.prototype.getResolutionEntries = function () {
        return this.resolutionEntries;
    };
    AddressResolutionStatementBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.unresolved.getSize();
        this.resolutionEntries.forEach(function (o) { return size += o.getSize(); });
        return size;
    };
    AddressResolutionStatementBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var unresolvedBytes = this.unresolved.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, unresolvedBytes);
        this.resolutionEntries.forEach(function (item) {
            var resolutionEntriesBytes = item.serialize();
            newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, resolutionEntriesBytes);
        });
        return newArray;
    };
    return AddressResolutionStatementBuilder;
}(ReceiptBuilder_1.ReceiptBuilder));
exports.AddressResolutionStatementBuilder = AddressResolutionStatementBuilder;
//# sourceMappingURL=AddressResolutionStatementBuilder.js.map