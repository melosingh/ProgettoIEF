"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AggregateTransactionBodyBuilder_1 = require("./AggregateTransactionBodyBuilder");
var GeneratorUtils_1 = require("./GeneratorUtils");
var TransactionBuilder_1 = require("./TransactionBuilder");
var AggregateBondedTransactionBuilder = (function (_super) {
    __extends(AggregateBondedTransactionBuilder, _super);
    function AggregateBondedTransactionBuilder(signature, signerPublicKey, version, network, type, fee, deadline, transactionsHash, transactions, cosignatures) {
        var _this = _super.call(this, signature, signerPublicKey, version, network, type, fee, deadline) || this;
        _this.aggregateTransactionBody = new AggregateTransactionBodyBuilder_1.AggregateTransactionBodyBuilder(transactionsHash, transactions, cosignatures);
        return _this;
    }
    AggregateBondedTransactionBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = TransactionBuilder_1.TransactionBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var aggregateTransactionBody = AggregateTransactionBodyBuilder_1.AggregateTransactionBodyBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, aggregateTransactionBody.getSize());
        return new AggregateBondedTransactionBuilder(superObject.signature, superObject.signerPublicKey, superObject.version, superObject.network, superObject.type, superObject.fee, superObject.deadline, aggregateTransactionBody.transactionsHash, aggregateTransactionBody.transactions, aggregateTransactionBody.cosignatures);
    };
    AggregateBondedTransactionBuilder.prototype.getTransactionsHash = function () {
        return this.aggregateTransactionBody.getTransactionsHash();
    };
    AggregateBondedTransactionBuilder.prototype.getAggregateTransactionHeader_Reserved1 = function () {
        return this.aggregateTransactionBody.getAggregateTransactionHeader_Reserved1();
    };
    AggregateBondedTransactionBuilder.prototype.getTransactions = function () {
        return this.aggregateTransactionBody.getTransactions();
    };
    AggregateBondedTransactionBuilder.prototype.getCosignatures = function () {
        return this.aggregateTransactionBody.getCosignatures();
    };
    AggregateBondedTransactionBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.aggregateTransactionBody.getSize();
        return size;
    };
    AggregateBondedTransactionBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var aggregateTransactionBodyBytes = this.aggregateTransactionBody.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, aggregateTransactionBodyBytes);
        return newArray;
    };
    return AggregateBondedTransactionBuilder;
}(TransactionBuilder_1.TransactionBuilder));
exports.AggregateBondedTransactionBuilder = AggregateBondedTransactionBuilder;
//# sourceMappingURL=AggregateBondedTransactionBuilder.js.map