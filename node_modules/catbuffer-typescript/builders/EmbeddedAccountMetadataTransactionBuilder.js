"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AccountMetadataTransactionBodyBuilder_1 = require("./AccountMetadataTransactionBodyBuilder");
var EmbeddedTransactionBuilder_1 = require("./EmbeddedTransactionBuilder");
var GeneratorUtils_1 = require("./GeneratorUtils");
var EmbeddedAccountMetadataTransactionBuilder = (function (_super) {
    __extends(EmbeddedAccountMetadataTransactionBuilder, _super);
    function EmbeddedAccountMetadataTransactionBuilder(signerPublicKey, version, network, type, targetPublicKey, scopedMetadataKey, valueSizeDelta, value) {
        var _this = _super.call(this, signerPublicKey, version, network, type) || this;
        _this.accountMetadataTransactionBody = new AccountMetadataTransactionBodyBuilder_1.AccountMetadataTransactionBodyBuilder(targetPublicKey, scopedMetadataKey, valueSizeDelta, value);
        return _this;
    }
    EmbeddedAccountMetadataTransactionBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = EmbeddedTransactionBuilder_1.EmbeddedTransactionBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var accountMetadataTransactionBody = AccountMetadataTransactionBodyBuilder_1.AccountMetadataTransactionBodyBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, accountMetadataTransactionBody.getSize());
        return new EmbeddedAccountMetadataTransactionBuilder(superObject.signerPublicKey, superObject.version, superObject.network, superObject.type, accountMetadataTransactionBody.targetPublicKey, accountMetadataTransactionBody.scopedMetadataKey, accountMetadataTransactionBody.valueSizeDelta, accountMetadataTransactionBody.value);
    };
    EmbeddedAccountMetadataTransactionBuilder.prototype.getTargetPublicKey = function () {
        return this.accountMetadataTransactionBody.getTargetPublicKey();
    };
    EmbeddedAccountMetadataTransactionBuilder.prototype.getScopedMetadataKey = function () {
        return this.accountMetadataTransactionBody.getScopedMetadataKey();
    };
    EmbeddedAccountMetadataTransactionBuilder.prototype.getValueSizeDelta = function () {
        return this.accountMetadataTransactionBody.getValueSizeDelta();
    };
    EmbeddedAccountMetadataTransactionBuilder.prototype.getValue = function () {
        return this.accountMetadataTransactionBody.getValue();
    };
    EmbeddedAccountMetadataTransactionBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.accountMetadataTransactionBody.getSize();
        return size;
    };
    EmbeddedAccountMetadataTransactionBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var accountMetadataTransactionBodyBytes = this.accountMetadataTransactionBody.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, accountMetadataTransactionBodyBytes);
        return newArray;
    };
    return EmbeddedAccountMetadataTransactionBuilder;
}(EmbeddedTransactionBuilder_1.EmbeddedTransactionBuilder));
exports.EmbeddedAccountMetadataTransactionBuilder = EmbeddedAccountMetadataTransactionBuilder;
//# sourceMappingURL=EmbeddedAccountMetadataTransactionBuilder.js.map