"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var AddressAliasTransactionBodyBuilder_1 = require("./AddressAliasTransactionBodyBuilder");
var EmbeddedTransactionBuilder_1 = require("./EmbeddedTransactionBuilder");
var GeneratorUtils_1 = require("./GeneratorUtils");
var EmbeddedAddressAliasTransactionBuilder = (function (_super) {
    __extends(EmbeddedAddressAliasTransactionBuilder, _super);
    function EmbeddedAddressAliasTransactionBuilder(signerPublicKey, version, network, type, namespaceId, address, aliasAction) {
        var _this = _super.call(this, signerPublicKey, version, network, type) || this;
        _this.addressAliasTransactionBody = new AddressAliasTransactionBodyBuilder_1.AddressAliasTransactionBodyBuilder(namespaceId, address, aliasAction);
        return _this;
    }
    EmbeddedAddressAliasTransactionBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = EmbeddedTransactionBuilder_1.EmbeddedTransactionBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var addressAliasTransactionBody = AddressAliasTransactionBodyBuilder_1.AddressAliasTransactionBodyBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, addressAliasTransactionBody.getSize());
        return new EmbeddedAddressAliasTransactionBuilder(superObject.signerPublicKey, superObject.version, superObject.network, superObject.type, addressAliasTransactionBody.namespaceId, addressAliasTransactionBody.address, addressAliasTransactionBody.aliasAction);
    };
    EmbeddedAddressAliasTransactionBuilder.prototype.getNamespaceId = function () {
        return this.addressAliasTransactionBody.getNamespaceId();
    };
    EmbeddedAddressAliasTransactionBuilder.prototype.getAddress = function () {
        return this.addressAliasTransactionBody.getAddress();
    };
    EmbeddedAddressAliasTransactionBuilder.prototype.getAliasAction = function () {
        return this.addressAliasTransactionBody.getAliasAction();
    };
    EmbeddedAddressAliasTransactionBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.addressAliasTransactionBody.getSize();
        return size;
    };
    EmbeddedAddressAliasTransactionBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var addressAliasTransactionBodyBytes = this.addressAliasTransactionBody.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, addressAliasTransactionBodyBytes);
        return newArray;
    };
    return EmbeddedAddressAliasTransactionBuilder;
}(EmbeddedTransactionBuilder_1.EmbeddedTransactionBuilder));
exports.EmbeddedAddressAliasTransactionBuilder = EmbeddedAddressAliasTransactionBuilder;
//# sourceMappingURL=EmbeddedAddressAliasTransactionBuilder.js.map