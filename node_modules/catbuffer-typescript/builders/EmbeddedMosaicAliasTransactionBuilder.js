"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EmbeddedTransactionBuilder_1 = require("./EmbeddedTransactionBuilder");
var GeneratorUtils_1 = require("./GeneratorUtils");
var MosaicAliasTransactionBodyBuilder_1 = require("./MosaicAliasTransactionBodyBuilder");
var EmbeddedMosaicAliasTransactionBuilder = (function (_super) {
    __extends(EmbeddedMosaicAliasTransactionBuilder, _super);
    function EmbeddedMosaicAliasTransactionBuilder(signerPublicKey, version, network, type, namespaceId, mosaicId, aliasAction) {
        var _this = _super.call(this, signerPublicKey, version, network, type) || this;
        _this.mosaicAliasTransactionBody = new MosaicAliasTransactionBodyBuilder_1.MosaicAliasTransactionBodyBuilder(namespaceId, mosaicId, aliasAction);
        return _this;
    }
    EmbeddedMosaicAliasTransactionBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = EmbeddedTransactionBuilder_1.EmbeddedTransactionBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var mosaicAliasTransactionBody = MosaicAliasTransactionBodyBuilder_1.MosaicAliasTransactionBodyBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, mosaicAliasTransactionBody.getSize());
        return new EmbeddedMosaicAliasTransactionBuilder(superObject.signerPublicKey, superObject.version, superObject.network, superObject.type, mosaicAliasTransactionBody.namespaceId, mosaicAliasTransactionBody.mosaicId, mosaicAliasTransactionBody.aliasAction);
    };
    EmbeddedMosaicAliasTransactionBuilder.prototype.getNamespaceId = function () {
        return this.mosaicAliasTransactionBody.getNamespaceId();
    };
    EmbeddedMosaicAliasTransactionBuilder.prototype.getMosaicId = function () {
        return this.mosaicAliasTransactionBody.getMosaicId();
    };
    EmbeddedMosaicAliasTransactionBuilder.prototype.getAliasAction = function () {
        return this.mosaicAliasTransactionBody.getAliasAction();
    };
    EmbeddedMosaicAliasTransactionBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.mosaicAliasTransactionBody.getSize();
        return size;
    };
    EmbeddedMosaicAliasTransactionBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var mosaicAliasTransactionBodyBytes = this.mosaicAliasTransactionBody.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, mosaicAliasTransactionBodyBytes);
        return newArray;
    };
    return EmbeddedMosaicAliasTransactionBuilder;
}(EmbeddedTransactionBuilder_1.EmbeddedTransactionBuilder));
exports.EmbeddedMosaicAliasTransactionBuilder = EmbeddedMosaicAliasTransactionBuilder;
//# sourceMappingURL=EmbeddedMosaicAliasTransactionBuilder.js.map