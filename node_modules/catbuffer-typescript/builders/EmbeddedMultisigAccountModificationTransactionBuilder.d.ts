import { EmbeddedTransactionBuilder } from './EmbeddedTransactionBuilder';
import { EntityTypeDto } from './EntityTypeDto';
import { KeyDto } from './KeyDto';
import { MultisigAccountModificationTransactionBodyBuilder } from './MultisigAccountModificationTransactionBodyBuilder';
import { NetworkTypeDto } from './NetworkTypeDto';
export declare class EmbeddedMultisigAccountModificationTransactionBuilder extends EmbeddedTransactionBuilder {
    multisigAccountModificationTransactionBody: MultisigAccountModificationTransactionBodyBuilder;
    constructor(signerPublicKey: KeyDto, version: number, network: NetworkTypeDto, type: EntityTypeDto, minRemovalDelta: number, minApprovalDelta: number, publicKeyAdditions: KeyDto[], publicKeyDeletions: KeyDto[]);
    static loadFromBinary(payload: Uint8Array): EmbeddedMultisigAccountModificationTransactionBuilder;
    getMinRemovalDelta(): number;
    getMinApprovalDelta(): number;
    getMultisigAccountModificationTransactionBody_Reserved1(): number;
    getPublicKeyAdditions(): KeyDto[];
    getPublicKeyDeletions(): KeyDto[];
    getSize(): number;
    serialize(): Uint8Array;
}
