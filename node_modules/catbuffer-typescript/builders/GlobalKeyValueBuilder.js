"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var MosaicRestrictionKeyDto_1 = require("./MosaicRestrictionKeyDto");
var RestrictionRuleBuilder_1 = require("./RestrictionRuleBuilder");
var GlobalKeyValueBuilder = (function () {
    function GlobalKeyValueBuilder(key, restrictionRule) {
        this.key = key;
        this.restrictionRule = restrictionRule;
    }
    GlobalKeyValueBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var key = MosaicRestrictionKeyDto_1.MosaicRestrictionKeyDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, key.getSize());
        var restrictionRule = RestrictionRuleBuilder_1.RestrictionRuleBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, restrictionRule.getSize());
        return new GlobalKeyValueBuilder(key, restrictionRule);
    };
    GlobalKeyValueBuilder.prototype.getKey = function () {
        return this.key;
    };
    GlobalKeyValueBuilder.prototype.getRestrictionRule = function () {
        return this.restrictionRule;
    };
    GlobalKeyValueBuilder.prototype.getSize = function () {
        var size = 0;
        size += this.key.getSize();
        size += this.restrictionRule.getSize();
        return size;
    };
    GlobalKeyValueBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var keyBytes = this.key.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, keyBytes);
        var restrictionRuleBytes = this.restrictionRule.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionRuleBytes);
        return newArray;
    };
    return GlobalKeyValueBuilder;
}());
exports.GlobalKeyValueBuilder = GlobalKeyValueBuilder;
//# sourceMappingURL=GlobalKeyValueBuilder.js.map