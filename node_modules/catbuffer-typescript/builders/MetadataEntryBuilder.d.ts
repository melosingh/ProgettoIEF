import { KeyDto } from './KeyDto';
import { MetadataTypeDto } from './MetadataTypeDto';
import { MetadataValueBuilder } from './MetadataValueBuilder';
import { ScopedMetadataKeyDto } from './ScopedMetadataKeyDto';
export declare class MetadataEntryBuilder {
    sourcePublicKey: KeyDto;
    targetPublicKey: KeyDto;
    scopedMetadataKey: ScopedMetadataKeyDto;
    targetId: number[];
    metadataType: MetadataTypeDto;
    value: MetadataValueBuilder;
    constructor(sourcePublicKey: KeyDto, targetPublicKey: KeyDto, scopedMetadataKey: ScopedMetadataKeyDto, targetId: number[], metadataType: MetadataTypeDto, value: MetadataValueBuilder);
    static loadFromBinary(payload: Uint8Array): MetadataEntryBuilder;
    getSourcePublicKey(): KeyDto;
    getTargetPublicKey(): KeyDto;
    getScopedMetadataKey(): ScopedMetadataKeyDto;
    getTargetId(): number[];
    getMetadataType(): MetadataTypeDto;
    getValue(): MetadataValueBuilder;
    getSize(): number;
    serialize(): Uint8Array;
}
