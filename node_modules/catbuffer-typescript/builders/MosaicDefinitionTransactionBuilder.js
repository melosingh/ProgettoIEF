"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var MosaicDefinitionTransactionBodyBuilder_1 = require("./MosaicDefinitionTransactionBodyBuilder");
var TransactionBuilder_1 = require("./TransactionBuilder");
var MosaicDefinitionTransactionBuilder = (function (_super) {
    __extends(MosaicDefinitionTransactionBuilder, _super);
    function MosaicDefinitionTransactionBuilder(signature, signerPublicKey, version, network, type, fee, deadline, id, duration, nonce, flags, divisibility) {
        var _this = _super.call(this, signature, signerPublicKey, version, network, type, fee, deadline) || this;
        _this.mosaicDefinitionTransactionBody = new MosaicDefinitionTransactionBodyBuilder_1.MosaicDefinitionTransactionBodyBuilder(id, duration, nonce, flags, divisibility);
        return _this;
    }
    MosaicDefinitionTransactionBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = TransactionBuilder_1.TransactionBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var mosaicDefinitionTransactionBody = MosaicDefinitionTransactionBodyBuilder_1.MosaicDefinitionTransactionBodyBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, mosaicDefinitionTransactionBody.getSize());
        return new MosaicDefinitionTransactionBuilder(superObject.signature, superObject.signerPublicKey, superObject.version, superObject.network, superObject.type, superObject.fee, superObject.deadline, mosaicDefinitionTransactionBody.id, mosaicDefinitionTransactionBody.duration, mosaicDefinitionTransactionBody.nonce, mosaicDefinitionTransactionBody.flags, mosaicDefinitionTransactionBody.divisibility);
    };
    MosaicDefinitionTransactionBuilder.prototype.getId = function () {
        return this.mosaicDefinitionTransactionBody.getId();
    };
    MosaicDefinitionTransactionBuilder.prototype.getDuration = function () {
        return this.mosaicDefinitionTransactionBody.getDuration();
    };
    MosaicDefinitionTransactionBuilder.prototype.getNonce = function () {
        return this.mosaicDefinitionTransactionBody.getNonce();
    };
    MosaicDefinitionTransactionBuilder.prototype.getFlags = function () {
        return this.mosaicDefinitionTransactionBody.getFlags();
    };
    MosaicDefinitionTransactionBuilder.prototype.getDivisibility = function () {
        return this.mosaicDefinitionTransactionBody.getDivisibility();
    };
    MosaicDefinitionTransactionBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.mosaicDefinitionTransactionBody.getSize();
        return size;
    };
    MosaicDefinitionTransactionBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var mosaicDefinitionTransactionBodyBytes = this.mosaicDefinitionTransactionBody.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, mosaicDefinitionTransactionBodyBytes);
        return newArray;
    };
    return MosaicDefinitionTransactionBuilder;
}(TransactionBuilder_1.TransactionBuilder));
exports.MosaicDefinitionTransactionBuilder = MosaicDefinitionTransactionBuilder;
//# sourceMappingURL=MosaicDefinitionTransactionBuilder.js.map