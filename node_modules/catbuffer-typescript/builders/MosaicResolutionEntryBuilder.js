"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var MosaicIdDto_1 = require("./MosaicIdDto");
var ReceiptSourceBuilder_1 = require("./ReceiptSourceBuilder");
var MosaicResolutionEntryBuilder = (function () {
    function MosaicResolutionEntryBuilder(source, resolved) {
        this.source = source;
        this.resolved = resolved;
    }
    MosaicResolutionEntryBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var source = ReceiptSourceBuilder_1.ReceiptSourceBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, source.getSize());
        var resolved = MosaicIdDto_1.MosaicIdDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, resolved.getSize());
        return new MosaicResolutionEntryBuilder(source, resolved);
    };
    MosaicResolutionEntryBuilder.prototype.getSource = function () {
        return this.source;
    };
    MosaicResolutionEntryBuilder.prototype.getResolved = function () {
        return this.resolved;
    };
    MosaicResolutionEntryBuilder.prototype.getSize = function () {
        var size = 0;
        size += this.source.getSize();
        size += this.resolved.getSize();
        return size;
    };
    MosaicResolutionEntryBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var sourceBytes = this.source.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, sourceBytes);
        var resolvedBytes = this.resolved.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, resolvedBytes);
        return newArray;
    };
    return MosaicResolutionEntryBuilder;
}());
exports.MosaicResolutionEntryBuilder = MosaicResolutionEntryBuilder;
//# sourceMappingURL=MosaicResolutionEntryBuilder.js.map