"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var MosaicSupplyChangeTransactionBodyBuilder_1 = require("./MosaicSupplyChangeTransactionBodyBuilder");
var TransactionBuilder_1 = require("./TransactionBuilder");
var MosaicSupplyChangeTransactionBuilder = (function (_super) {
    __extends(MosaicSupplyChangeTransactionBuilder, _super);
    function MosaicSupplyChangeTransactionBuilder(signature, signerPublicKey, version, network, type, fee, deadline, mosaicId, delta, action) {
        var _this = _super.call(this, signature, signerPublicKey, version, network, type, fee, deadline) || this;
        _this.mosaicSupplyChangeTransactionBody = new MosaicSupplyChangeTransactionBodyBuilder_1.MosaicSupplyChangeTransactionBodyBuilder(mosaicId, delta, action);
        return _this;
    }
    MosaicSupplyChangeTransactionBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = TransactionBuilder_1.TransactionBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var mosaicSupplyChangeTransactionBody = MosaicSupplyChangeTransactionBodyBuilder_1.MosaicSupplyChangeTransactionBodyBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, mosaicSupplyChangeTransactionBody.getSize());
        return new MosaicSupplyChangeTransactionBuilder(superObject.signature, superObject.signerPublicKey, superObject.version, superObject.network, superObject.type, superObject.fee, superObject.deadline, mosaicSupplyChangeTransactionBody.mosaicId, mosaicSupplyChangeTransactionBody.delta, mosaicSupplyChangeTransactionBody.action);
    };
    MosaicSupplyChangeTransactionBuilder.prototype.getMosaicId = function () {
        return this.mosaicSupplyChangeTransactionBody.getMosaicId();
    };
    MosaicSupplyChangeTransactionBuilder.prototype.getDelta = function () {
        return this.mosaicSupplyChangeTransactionBody.getDelta();
    };
    MosaicSupplyChangeTransactionBuilder.prototype.getAction = function () {
        return this.mosaicSupplyChangeTransactionBody.getAction();
    };
    MosaicSupplyChangeTransactionBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.mosaicSupplyChangeTransactionBody.getSize();
        return size;
    };
    MosaicSupplyChangeTransactionBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var mosaicSupplyChangeTransactionBodyBytes = this.mosaicSupplyChangeTransactionBody.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, mosaicSupplyChangeTransactionBodyBytes);
        return newArray;
    };
    return MosaicSupplyChangeTransactionBuilder;
}(TransactionBuilder_1.TransactionBuilder));
exports.MosaicSupplyChangeTransactionBuilder = MosaicSupplyChangeTransactionBuilder;
//# sourceMappingURL=MosaicSupplyChangeTransactionBuilder.js.map