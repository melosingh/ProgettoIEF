"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var NamespaceIdDto_1 = require("./NamespaceIdDto");
var ReceiptBuilder_1 = require("./ReceiptBuilder");
var NamespaceExpiryReceiptBuilder = (function (_super) {
    __extends(NamespaceExpiryReceiptBuilder, _super);
    function NamespaceExpiryReceiptBuilder(version, type, artifactId) {
        var _this = _super.call(this, version, type) || this;
        _this.artifactId = artifactId;
        return _this;
    }
    NamespaceExpiryReceiptBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var superObject = ReceiptBuilder_1.ReceiptBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, superObject.getSize());
        var artifactId = NamespaceIdDto_1.NamespaceIdDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, artifactId.getSize());
        return new NamespaceExpiryReceiptBuilder(superObject.version, superObject.type, artifactId);
    };
    NamespaceExpiryReceiptBuilder.prototype.getArtifactId = function () {
        return this.artifactId;
    };
    NamespaceExpiryReceiptBuilder.prototype.getSize = function () {
        var size = _super.prototype.getSize.call(this);
        size += this.artifactId.getSize();
        return size;
    };
    NamespaceExpiryReceiptBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var superBytes = _super.prototype.serialize.call(this);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, superBytes);
        var artifactIdBytes = this.artifactId.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, artifactIdBytes);
        return newArray;
    };
    return NamespaceExpiryReceiptBuilder;
}(ReceiptBuilder_1.ReceiptBuilder));
exports.NamespaceExpiryReceiptBuilder = NamespaceExpiryReceiptBuilder;
//# sourceMappingURL=NamespaceExpiryReceiptBuilder.js.map