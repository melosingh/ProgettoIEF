"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var NamespaceAliasBuilder_1 = require("./NamespaceAliasBuilder");
var NamespacePathBuilder = (function () {
    function NamespacePathBuilder(path, alias) {
        this.path = path;
        this.alias = alias;
    }
    NamespacePathBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var pathSize = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        var path = GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), pathSize);
        byteArray.splice(0, pathSize);
        var alias = NamespaceAliasBuilder_1.NamespaceAliasBuilder.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, alias.getSize());
        return new NamespacePathBuilder(path, alias);
    };
    NamespacePathBuilder.prototype.getPath = function () {
        return this.path;
    };
    NamespacePathBuilder.prototype.getAlias = function () {
        return this.alias;
    };
    NamespacePathBuilder.prototype.getSize = function () {
        var size = 0;
        size += 1;
        size += this.path.length;
        size += this.alias.getSize();
        return size;
    };
    NamespacePathBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var pathSizeBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.path.length, 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, pathSizeBytes);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, this.path);
        var aliasBytes = this.alias.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, aliasBytes);
        return newArray;
    };
    return NamespacePathBuilder;
}());
exports.NamespacePathBuilder = NamespacePathBuilder;
//# sourceMappingURL=NamespacePathBuilder.js.map