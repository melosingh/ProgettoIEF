"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var ReceiptBuilder = (function () {
    function ReceiptBuilder(version, type) {
        this.size = 0;
        this.version = version;
        this.type = type;
    }
    ReceiptBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var size = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 4));
        byteArray.splice(0, 4);
        var version = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 2));
        byteArray.splice(0, 2);
        var type = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 2));
        byteArray.splice(0, 2);
        return new ReceiptBuilder(version, type);
    };
    ReceiptBuilder.prototype.getVersion = function () {
        return this.version;
    };
    ReceiptBuilder.prototype.getType = function () {
        return this.type;
    };
    ReceiptBuilder.prototype.getSize = function () {
        var size = 0;
        size += 4;
        size += 2;
        size += 2;
        return size;
    };
    ReceiptBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var versionBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getVersion(), 2);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, versionBytes);
        var typeBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.type, 2);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, typeBytes);
        return newArray;
    };
    return ReceiptBuilder;
}());
exports.ReceiptBuilder = ReceiptBuilder;
//# sourceMappingURL=ReceiptBuilder.js.map