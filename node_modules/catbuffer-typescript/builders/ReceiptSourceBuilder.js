"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var ReceiptSourceBuilder = (function () {
    function ReceiptSourceBuilder(primaryId, secondaryId) {
        this.primaryId = primaryId;
        this.secondaryId = secondaryId;
    }
    ReceiptSourceBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var primaryId = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 4));
        byteArray.splice(0, 4);
        var secondaryId = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 4));
        byteArray.splice(0, 4);
        return new ReceiptSourceBuilder(primaryId, secondaryId);
    };
    ReceiptSourceBuilder.prototype.getPrimaryId = function () {
        return this.primaryId;
    };
    ReceiptSourceBuilder.prototype.getSecondaryId = function () {
        return this.secondaryId;
    };
    ReceiptSourceBuilder.prototype.getSize = function () {
        var size = 0;
        size += 4;
        size += 4;
        return size;
    };
    ReceiptSourceBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var primaryIdBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getPrimaryId(), 4);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, primaryIdBytes);
        var secondaryIdBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.getSecondaryId(), 4);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, secondaryIdBytes);
        return newArray;
    };
    return ReceiptSourceBuilder;
}());
exports.ReceiptSourceBuilder = ReceiptSourceBuilder;
//# sourceMappingURL=ReceiptSourceBuilder.js.map