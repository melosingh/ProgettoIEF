"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GeneratorUtils_1 = require("./GeneratorUtils");
var MosaicIdDto_1 = require("./MosaicIdDto");
var RestrictionRuleBuilder = (function () {
    function RestrictionRuleBuilder(referenceMosaicId, restrictionValue, restrictionType) {
        this.referenceMosaicId = referenceMosaicId;
        this.restrictionValue = restrictionValue;
        this.restrictionType = restrictionType;
    }
    RestrictionRuleBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var referenceMosaicId = MosaicIdDto_1.MosaicIdDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, referenceMosaicId.getSize());
        var restrictionValue = GeneratorUtils_1.GeneratorUtils.bufferToUint64(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 8));
        byteArray.splice(0, 8);
        var restrictionType = GeneratorUtils_1.GeneratorUtils.bufferToUint(GeneratorUtils_1.GeneratorUtils.getBytes(Uint8Array.from(byteArray), 1));
        byteArray.splice(0, 1);
        return new RestrictionRuleBuilder(referenceMosaicId, restrictionValue, restrictionType);
    };
    RestrictionRuleBuilder.prototype.getReferenceMosaicId = function () {
        return this.referenceMosaicId;
    };
    RestrictionRuleBuilder.prototype.getRestrictionValue = function () {
        return this.restrictionValue;
    };
    RestrictionRuleBuilder.prototype.getRestrictionType = function () {
        return this.restrictionType;
    };
    RestrictionRuleBuilder.prototype.getSize = function () {
        var size = 0;
        size += this.referenceMosaicId.getSize();
        size += 8;
        size += 1;
        return size;
    };
    RestrictionRuleBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var referenceMosaicIdBytes = this.referenceMosaicId.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, referenceMosaicIdBytes);
        var restrictionValueBytes = GeneratorUtils_1.GeneratorUtils.uint64ToBuffer(this.getRestrictionValue());
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionValueBytes);
        var restrictionTypeBytes = GeneratorUtils_1.GeneratorUtils.uintToBuffer(this.restrictionType, 1);
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, restrictionTypeBytes);
        return newArray;
    };
    return RestrictionRuleBuilder;
}());
exports.RestrictionRuleBuilder = RestrictionRuleBuilder;
//# sourceMappingURL=RestrictionRuleBuilder.js.map