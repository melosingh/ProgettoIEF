"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AmountDto_1 = require("./AmountDto");
var GeneratorUtils_1 = require("./GeneratorUtils");
var UnresolvedMosaicIdDto_1 = require("./UnresolvedMosaicIdDto");
var UnresolvedMosaicBuilder = (function () {
    function UnresolvedMosaicBuilder(mosaicId, amount) {
        this.mosaicId = mosaicId;
        this.amount = amount;
    }
    UnresolvedMosaicBuilder.loadFromBinary = function (payload) {
        var byteArray = Array.from(payload);
        var mosaicId = UnresolvedMosaicIdDto_1.UnresolvedMosaicIdDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, mosaicId.getSize());
        var amount = AmountDto_1.AmountDto.loadFromBinary(Uint8Array.from(byteArray));
        byteArray.splice(0, amount.getSize());
        return new UnresolvedMosaicBuilder(mosaicId, amount);
    };
    UnresolvedMosaicBuilder.prototype.getMosaicId = function () {
        return this.mosaicId;
    };
    UnresolvedMosaicBuilder.prototype.getAmount = function () {
        return this.amount;
    };
    UnresolvedMosaicBuilder.prototype.getSize = function () {
        var size = 0;
        size += this.mosaicId.getSize();
        size += this.amount.getSize();
        return size;
    };
    UnresolvedMosaicBuilder.prototype.serialize = function () {
        var newArray = Uint8Array.from([]);
        var mosaicIdBytes = this.mosaicId.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, mosaicIdBytes);
        var amountBytes = this.amount.serialize();
        newArray = GeneratorUtils_1.GeneratorUtils.concatTypedArrays(newArray, amountBytes);
        return newArray;
    };
    return UnresolvedMosaicBuilder;
}());
exports.UnresolvedMosaicBuilder = UnresolvedMosaicBuilder;
//# sourceMappingURL=UnresolvedMosaicBuilder.js.map