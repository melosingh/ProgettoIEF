/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest 1.0.20.22
 *
 * The version of the OpenAPI document: 0.8.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../api';

export class NamespaceNetworkPropertiesDTO {
    /**
    * Maximum namespace name size.
    */
    'maxNameSize'?: string;
    /**
    * Maximum number of children for a root namespace.
    */
    'maxChildNamespaces'?: string;
    /**
    * Maximum namespace depth.
    */
    'maxNamespaceDepth'?: string;
    /**
    * Minimum namespace duration.
    */
    'minNamespaceDuration'?: string;
    /**
    * Maximum namespace duration.
    */
    'maxNamespaceDuration'?: string;
    /**
    * Grace period during which time only the previous owner can renew an expired namespace.
    */
    'namespaceGracePeriodDuration'?: string;
    /**
    * Reserved root namespaces that cannot be claimed.
    */
    'reservedRootNamespaceNames'?: string;
    /**
    * Public key.
    */
    'namespaceRentalFeeSinkPublicKey'?: string;
    /**
    * Root namespace rental fee per block.
    */
    'rootNamespaceRentalFeePerBlock'?: string;
    /**
    * Child namespace rental fee.
    */
    'childNamespaceRentalFee'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "maxNameSize",
            "baseName": "maxNameSize",
            "type": "string"
        },
        {
            "name": "maxChildNamespaces",
            "baseName": "maxChildNamespaces",
            "type": "string"
        },
        {
            "name": "maxNamespaceDepth",
            "baseName": "maxNamespaceDepth",
            "type": "string"
        },
        {
            "name": "minNamespaceDuration",
            "baseName": "minNamespaceDuration",
            "type": "string"
        },
        {
            "name": "maxNamespaceDuration",
            "baseName": "maxNamespaceDuration",
            "type": "string"
        },
        {
            "name": "namespaceGracePeriodDuration",
            "baseName": "namespaceGracePeriodDuration",
            "type": "string"
        },
        {
            "name": "reservedRootNamespaceNames",
            "baseName": "reservedRootNamespaceNames",
            "type": "string"
        },
        {
            "name": "namespaceRentalFeeSinkPublicKey",
            "baseName": "namespaceRentalFeeSinkPublicKey",
            "type": "string"
        },
        {
            "name": "rootNamespaceRentalFeePerBlock",
            "baseName": "rootNamespaceRentalFeePerBlock",
            "type": "string"
        },
        {
            "name": "childNamespaceRentalFee",
            "baseName": "childNamespaceRentalFee",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return NamespaceNetworkPropertiesDTO.attributeTypeMap;
    }
}

